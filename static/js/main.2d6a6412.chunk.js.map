{"version":3,"sources":["components/Header/Header.module.css","components/DocumentViewer/InfoBar/InfoBar.module.css","App.module.css","components/DocumentViewer/DocumentViewer.module.css","components/SourceTree/SourceTree.module.css","redux/documentViewerReducer.js","components/Header/Header.jsx","components/SourceTree/DocumentsTree.jsx","components/SourceTree/DialogsTree.jsx","redux/sourceTreeReducer.js","components/SourceTree/SourceTree.jsx","components/DocumentViewer/InfoBar/InfoBar.jsx","components/DocumentViewer/DocumentViewer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["module","exports","initialState","documents","id","name","text","documentIsOpen","documentIsEdit","documentEditMode","documentViewerReducer","state","action","type","filter","document","documentId","currentOpenDocument","connect","selectedDataId","sourceTree","documentViewer","getStartEditDocument","props","className","style","header","header__leftSide","header__title","header__rightSide","header__saveIcon","fill","fontSize","header__openIcon","onClick","console","log","header__accountIcon","useStyles","makeStyles","root","height","flexGrow","maxWidth","DocumentsTree","classes","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","renderTree","nodes","TreeItem","dataId","setSelectedDataId","getDocumentById","key","nodeId","label","Array","isArray","children","map","node","documentsData","eight","DialogsTree","dialogsData","sourceTreeData","sourceTreeReducer","documents__sourceTree","InfoBar","documents__infoBar","infoBar","infoBar__openFileName","documentIsOpen_name","infoBar__currentDate","date","Date","day","getDate","month","getMonth","year","getFullYear","getCurrentDate","documents__viewer","documents__text","App","container","wrapper","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d6a6412.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1BRpm\",\"header__leftSide\":\"Header_header__leftSide__3r4kM\",\"header__rightSide\":\"Header_header__rightSide__1lz52\",\"header__treeIcon\":\"Header_header__treeIcon__2hh4_\",\"header__title\":\"Header_header__title__1oX2c\",\"header__saveIcon\":\"Header_header__saveIcon__2Hzs9\",\"header__openIcon\":\"Header_header__openIcon__39iID\",\"header__accountIcon\":\"Header_header__accountIcon__27ziU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBar\":\"InfoBar_infoBar__dtlsc\",\"infoBar__openFileName\":\"InfoBar_infoBar__openFileName__2RHGK\",\"infoBar__currentDate\":\"InfoBar_infoBar__currentDate__18jkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__fH3sp\",\"wrapper\":\"App_wrapper__Scdqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"documents__text\":\"DocumentViewer_documents__text__2xX8S\",\"documents__viewer\":\"DocumentViewer_documents__viewer__1J1s5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"documents__sourceTree\":\"SourceTree_documents__sourceTree__l4ZuF\"};","const GET_DOCUMENT_BY_ID = \"GET_DOCUMENT_BY_ID\";\r\nconst GET_START_EDIT_DOCUMENT = \"GET_START_EDIT_DOCUMENT\";\r\n\r\nexport const getDocumentById = (documentId) => ({\r\n  type: GET_DOCUMENT_BY_ID,\r\n  documentId,\r\n});\r\n\r\nexport const getStartEditDocument = (currentOpenDocument) => ({\r\n  type: GET_START_EDIT_DOCUMENT,\r\n  currentOpenDocument,\r\n})\r\n\r\nlet initialState = {\r\n  documents: [\r\n    { id: \"1_1\", name: \"Письмо 1\", text: \"ID[1_1]: Письмо 1\" },\r\n    { id: \"1_2\", name: \"Письмо 2\", text: \"ID[1_2]: Письмо 2\" },\r\n    { id: \"1_3\", name: \"Письмо 3\", text: \"ID[1_3]: Письмо 3\" },\r\n    { id: \"2_1\", name: \"Извещение 1\", text: \"ID[2_1]: Извещение 1\" },\r\n    { id: \"2_2\", name: \"Извещение 2\", text: \"ID[2_2]: Извещение 2\" },\r\n    { id: \"2_3\", name: \"Извещение 3\", text: \"ID[2_3]: Извещение 3\" },\r\n    { id: \"3_1\", name: \"Договор 1\", text: \"ID[3_1]: Договор 1\" },\r\n    { id: \"3_2\", name: \"Договор 2\", text: \"ID[3_2]: Договор 2\" },\r\n    { id: \"3_3\", name: \"Договор 3\", text: \"ID[3_3]: Договор 3\" },\r\n    { id: \"4_1\", name: \"Декларация 1\", text: \"ID[4_1]: Декларация 1\" },\r\n    { id: \"4_2\", name: \"Декларация 2\", text: \"ID[4_2]: Декларация 2\" },\r\n    { id: \"4_3\", name: \"Декларация 3\", text: \"ID[4_3]: Декларация 3\" },\r\n  ],\r\n  documentIsOpen: [ { id: \"null\", name: null, text: \"Выберите и откройте документ или пиcьмо\" } ],\r\n  documentIsEdit: [],\r\n  documentEditMode: false\r\n};\r\n\r\nconst documentViewerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_DOCUMENT_BY_ID: {\r\n      return {\r\n        ...state,\r\n        documentIsOpen: state.documents.filter(\r\n          (document) => document.id === action.documentId\r\n        ),\r\n      };\r\n    }\r\n    case GET_START_EDIT_DOCUMENT: {\r\n      return {\r\n        ...state,\r\n        documentIsEdit: {...action.currentOpenDocument},\r\n        documentEditMode: true\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default documentViewerReducer;\r\n","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport AccountTreeRoundedIcon from \"@material-ui/icons/AccountTreeRounded\";\r\nimport AccountBoxRoundedIcon from \"@material-ui/icons/AccountBoxRounded\";\r\nimport AddBoxRoundedIcon from \"@material-ui/icons/AddBoxRounded\";\r\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\r\nimport {\r\n  getDocumentById,\r\n  getStartEditDocument,\r\n} from \"../../redux/documentViewerReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Header = (props) => {\r\n  const startEditDocument = (currentOpenDocument) => {\r\n    if (props.documentIsOpen[0].name !== null) {\r\n      props.getStartEditDocument(currentOpenDocument);\r\n      console.log(`EDIT DOCUMENT MODE ON`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={style.header}>\r\n      <div className={style.header__leftSide}>\r\n        {/* <AccountTreeRoundedIcon\r\n          className={style.header__treeIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n        /> */}\r\n        <h1 className={style.header__title}>Тестовое задание</h1>\r\n      </div>\r\n\r\n      <div className={style.header__rightSide}>\r\n        <SaveRoundedIcon\r\n          className={style.header__saveIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n        />\r\n        <AddBoxRoundedIcon\r\n          className={style.header__openIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n          onClick={() => startEditDocument(props.documentIsOpen)}\r\n        />\r\n        <AccountBoxRoundedIcon\r\n          className={style.header__accountIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDataId: state.sourceTree.selectedDataId,\r\n    documentIsOpen: state.documentViewer.documentIsOpen,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getStartEditDocument })(Header);\r\n","import React from \"react\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"auto\",\r\n    flexGrow: 1,\r\n    maxWidth: \"100vh\",\r\n  },\r\n});\r\n\r\nconst DocumentsTree = (props) => {\r\n  const classes = useStyles();\r\n  const onClickSourceTree = (dataId) => {\r\n    props.setSelectedDataId(dataId);\r\n    props.getDocumentById(dataId);\r\n  };\r\n\r\n  const renderTree = (nodes) => (\r\n    <TreeItem\r\n      onClick={() => nodes.type === \"document\" ? onClickSourceTree(nodes.id) : null}\r\n      key={nodes.id}\r\n      nodeId={nodes.id}\r\n      label={nodes.name}\r\n    >\r\n      {Array.isArray(nodes.children)\r\n        ? nodes.children.map((node) => renderTree(node))\r\n        : null}\r\n    </TreeItem>\r\n  );\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpanded={[\"root\"]}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n    >\r\n      {renderTree(props.documentsData)}\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nexport default DocumentsTree;\r\n","import React from \"react\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    eight: \"auto\",\r\n    flexGrow: 1,\r\n    maxWidth: \"100vh\",\r\n  },\r\n});\r\n\r\nconst DialogsTree = (props) => {\r\n  const classes = useStyles();\r\n  const onClickSourceTree = (dataId) => {\r\n    props.setSelectedDataId(dataId);\r\n    props.getDocumentById(dataId);\r\n  };\r\n\r\n  const renderTree = (nodes) => (\r\n    <TreeItem\r\n      onClick={() =>\r\n        nodes.type === \"document\" ? onClickSourceTree(nodes.id) : null\r\n      }\r\n      key={nodes.id}\r\n      nodeId={nodes.id}\r\n      label={nodes.name}\r\n    >\r\n      {Array.isArray(nodes.children)\r\n        ? nodes.children.map((node) => renderTree(node))\r\n        : null}\r\n    </TreeItem>\r\n  );\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpanded={[\"root\"]}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n    >\r\n      {renderTree(props.dialogsData)}\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nexport default DialogsTree;\r\n","const SET_SELECTED_DATA_ID = \"SET_SELECTED_DATA_ID\";\r\n\r\n\r\nexport const setSelectedDataId = (dataId) => ({ type: SET_SELECTED_DATA_ID, dataId });\r\n\r\nlet initialState = {\r\n  sourceTreeData: {\r\n    dialogsData: {\r\n      id: \"root\",\r\n      name: \"Переписка\",\r\n      children: [\r\n        {\r\n          id: \"1\",\r\n          type: \"folder\",\r\n          name: \"Партнеры\",\r\n          children: [\r\n            {\r\n              id: \"1_1\",\r\n              type: \"document\",\r\n              name: \"Письмо 1\",\r\n            },\r\n            {\r\n              id: \"1_2\",\r\n              type: \"document\",\r\n              name: \"Письмо 2\",\r\n            },\r\n            {\r\n              id: \"1_3\",\r\n              type: \"document\",\r\n              name: \"Письмо 3\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"2\",\r\n          type: \"folder\",\r\n          name: \"ФНС\",\r\n          children: [\r\n            {\r\n              id: \"2_1\",\r\n              type: \"document\",\r\n              name: \"Извещение 1\",\r\n            },\r\n            {\r\n              id: \"2_2\",\r\n              type: \"document\",\r\n              name: \"Извещение 2\",\r\n            },\r\n            {\r\n              id: \"2_3\",\r\n              type: \"document\",\r\n              name: \"Извещение 3\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    documentsData: {\r\n      id: \"root\",\r\n      type: \"folder\",\r\n      name: \"Документы\",\r\n      children: [\r\n        {\r\n          id: \"3\",\r\n          type: \"folder\",\r\n          name: \"Договора\",\r\n          children: [\r\n            {\r\n              id: \"3_1\",\r\n              type: \"document\",\r\n              name: \"Договор 1\",\r\n            },\r\n            {\r\n              id: \"3_2\",\r\n              type: \"document\",\r\n              name: \"Договор 2\",\r\n            },\r\n            {\r\n              id: \"3_3\",\r\n              type: \"document\",\r\n              name: \"Договор 3\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"4\",\r\n          type: \"folder\",\r\n          name: \"Декларации\",\r\n          children: [\r\n            {\r\n              id: \"4_1\",\r\n              type: \"document\",\r\n              name: \"Декларация 1\",\r\n            },\r\n            {\r\n              id: \"4_2\",\r\n              type: \"document\",\r\n              name: \"Декларация 2\",\r\n            },\r\n            {\r\n              id: \"4_3\",\r\n              type: \"document\",\r\n              name: \"Декларация 3\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  selectedDataId: null,\r\n};\r\n\r\nconst sourceTreeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SELECTED_DATA_ID: {\r\n      return {\r\n        ...state,\r\n        selectedDataId: action.dataId,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sourceTreeReducer;\r\n","import React from \"react\";\r\nimport style from \"./SourceTree.module.css\";\r\nimport DocumentsTree from \"./DocumentsTree\";\r\nimport DialogsTree from \"./DialogsTree\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSelectedDataId } from \"../../redux/sourceTreeReducer\";\r\nimport { getDocumentById } from \"../../redux/documentViewerReducer\";\r\n\r\nconst SourceTree = (props) => {\r\n  return (\r\n    <div className={style.documents__sourceTree}>\r\n      <DocumentsTree\r\n        documentsData={props.sourceTreeData.documentsData}\r\n        setSelectedDataId={props.setSelectedDataId}\r\n        getDocumentById={props.getDocumentById}\r\n      />\r\n      <DialogsTree\r\n        dialogsData={props.sourceTreeData.dialogsData}\r\n        setSelectedDataId={props.setSelectedDataId}\r\n        getDocumentById={props.getDocumentById}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sourceTreeData: state.sourceTree.sourceTreeData,\r\n    selectedDataId: state.sourceTree.selectedDataId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setSelectedDataId, getDocumentById })(SourceTree);\r\n","import React from \"react\";\r\nimport style from \"./InfoBar.module.css\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nconst InfoBar = (props) => {\r\n  const getCurrentDate = () => {\r\n    let date = new Date();\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className={(style.documents__infoBar, style.infoBar)}>\r\n      <div className={style.infoBar__openFileName}>\r\n        <DescriptionIcon fontSize=\"small\" />\r\n        {props.documentIsOpen_name !== null ? props.documentIsOpen_name : null}\r\n      </div>\r\n      <div className={style.infoBar__currentDate}>{getCurrentDate()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBar;\r\n","import React from \"react\";\r\nimport style from \"./DocumentViewer.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport InfoBar from \"./InfoBar/InfoBar\";\r\n\r\nconst DocumentViewer = (props) => {\r\n  return (\r\n    <div className={style.documents__viewer}>\r\n      <div className={style.documents__text}>\r\n        {\" \"}\r\n        {props.documentIsOpen[0].text}{\" \"}\r\n      </div>\r\n     <InfoBar documentIsOpen_name={props.documentIsOpen[0].name}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    documentIsOpen: state.documentViewer.documentIsOpen,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DocumentViewer);\r\n","import React from \"react\";\nimport style from \"./App.module.css\";\nimport Header from \"./components/Header/Header\";\nimport SourceTree from \"./components/SourceTree/SourceTree\";\nimport DocumentViewer from \"./components/DocumentViewer/DocumentViewer\";\n\nconst App = (props) => {\n  return (\n    <div className={style.container}>\n      <Header />\n      <div className={style.wrapper}>\n        <SourceTree />\n        <DocumentViewer />        \n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\r\nimport sourceTreeReducer from \"./sourceTreeReducer\";\r\nimport documentViewerReducer from \"./documentViewerReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  sourceTree: sourceTreeReducer,\r\n  documentViewer: documentViewerReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}