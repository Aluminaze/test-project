{"version":3,"sources":["components/Header/Header.jsx","components/SourceTree/DocumentsTree.jsx","components/SourceTree/DialogsTree.jsx","components/SourceTree/SourceTree.jsx","App.js","serviceWorker.js","redux/sourceTreeReducer.js","redux/redux-store.js","index.js","App.module.css","components/Header/Header.module.css"],"names":["Header","props","className","style","header","header__leftSide","header__treeIcon","fill","fontSize","header__title","header__rightSide","header__saveIcon","header__openIcon","header__accountIcon","useStyles","makeStyles","root","height","flexGrow","maxWidth","DocumentsTree","classes","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","renderTree","nodes","TreeItem","key","id","nodeId","label","name","Array","isArray","children","map","node","documentsData","eight","DialogsTree","onClick","console","log","dialogsData","connect","state","sourceTreeData","sourceTree","App","container","wrapper","documents__sourceTree","documents__viewer","documents__text","documents__infoBar","infoBar","infoBar__openFileName","infoBar__currentDate","Boolean","window","location","hostname","match","initialState","sourceTreeReducer","action","type","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.917ba664.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport AccountTreeRoundedIcon from \"@material-ui/icons/AccountTreeRounded\";\r\nimport AccountBoxRoundedIcon from \"@material-ui/icons/AccountBoxRounded\";\r\nimport AddBoxRoundedIcon from \"@material-ui/icons/AddBoxRounded\";\r\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <section className={style.header}>\r\n      <div className={style.header__leftSide}>\r\n        <AccountTreeRoundedIcon\r\n          className={style.header__treeIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n        />\r\n        <h1 className={style.header__title}>Тестовое задание</h1>\r\n      </div>\r\n\r\n      <div className={style.header__rightSide}>\r\n        <SaveRoundedIcon\r\n          className={style.header__saveIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n        />\r\n        <AddBoxRoundedIcon\r\n          className={style.header__openIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n        />\r\n        <AccountBoxRoundedIcon\r\n          className={style.header__accountIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"auto\",\r\n    flexGrow: 1,\r\n    maxWidth: \"100vh\",\r\n  },\r\n});\r\n\r\nconst DocumentsTree = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const renderTree = (nodes) => (\r\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n      {Array.isArray(nodes.children)\r\n        ? nodes.children.map((node) => renderTree(node))\r\n        : null}\r\n    </TreeItem>\r\n  );\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpanded={[\"root\"]}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n    >\r\n      {renderTree(props.documentsData)}\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nexport default DocumentsTree;\r\n","import React from \"react\";\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    eight: \"auto\",\r\n    flexGrow: 1,\r\n    maxWidth: \"100vh\",\r\n  },\r\n});\r\n\r\nconst DialogsTree = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const renderTree = (nodes) => (\r\n    <TreeItem onClick={ () => console.log(nodes.id) } key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n      {Array.isArray(nodes.children)\r\n        ? nodes.children.map((node) => renderTree(node))\r\n        : null}\r\n    </TreeItem>\r\n  );\r\n\r\n  return (\r\n    <TreeView\r\n      className={classes.root}\r\n      defaultCollapseIcon={<ExpandMoreIcon />}\r\n      defaultExpanded={[\"root\"]}\r\n      defaultExpandIcon={<ChevronRightIcon />}\r\n    >\r\n      {renderTree(props.dialogsData)}\r\n    </TreeView>\r\n  );\r\n};\r\n\r\nexport default DialogsTree;","import React from \"react\";\r\nimport DocumentsTree from \"./DocumentsTree\";\r\nimport DialogsTree from \"./DialogsTree\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SourceTree = (props) => {\r\n  return (\r\n    <div>\r\n      <DocumentsTree documentsData={props.sourceTreeData.documentsData} />\r\n      <DialogsTree dialogsData={props.sourceTreeData.dialogsData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    sourceTreeData: state.sourceTree.sourceTreeData\r\n  }  \r\n};\r\n\r\nexport default connect(mapStateToProps,)(SourceTree);\r\n","import React from \"react\";\nimport style from \"./App.module.css\";\nimport Header from \"./components/Header/Header\";\nimport SourceTree from \"./components/SourceTree/SourceTree\";\n\n// const sourceTreeData = {\n//   dialogsData: {\n//     id: \"root\",\n//     name: \"Переписка\",\n//     children: [\n//       {\n//         id: \"1\",\n//         name: \"Партнеры\",\n//         children: [\n//           {\n//             id: \"1_1\",\n//             name: \"Письмо 1\",\n//           },\n//           {\n//             id: \"1_2\",\n//             name: \"Письмо 2\",\n//           },\n//           {\n//             id: \"1_3\",\n//             name: \"Письмо 3\",\n//           },\n//         ]\n//       },\n//       {\n//         id: \"2\",\n//         name: \"ФНС\",\n//         children: [\n//           {\n//             id: \"2_1\",\n//             name: \"Извещение 1\",\n//           },\n//           {\n//             id: \"2_2\",\n//             name: \"Извещение 2\",\n//           },\n//           {\n//             id: \"2_3\",\n//             name: \"Извещение 3\",\n//           },\n//         ],\n//       },\n//     ],\n//   },\n//   doucumentsData: {\n//     id: \"root\",\n//     name: \"Документы\",\n//     children: [\n//       {\n//         id: \"1\",\n//         name: \"Договора\",\n//         children: [\n//           {\n//             id: \"1_1\",\n//             name: \"Договор 1\",\n//           },\n//           {\n//             id: \"1_2\",\n//             name: \"Договор 2\",\n//           },\n//           {\n//             id: \"1_3\",\n//             name: \"Договор 3\",\n//           },\n//         ]\n//       },\n//       {\n//         id: \"2\",\n//         name: \"Декларации\",\n//         children: [\n//           {\n//             id: \"2_1\",\n//             name: \"Декларация 1\",\n//           },\n//           {\n//             id: \"2_2\",\n//             name: \"Декларация 2\",\n//           },\n//           {\n//             id: \"2_3\",\n//             name: \"Декларация 3\",\n//           },\n//         ],\n//       },\n//     ],\n//   }\n// }\n\n\nconst App = (props) => {\n  return (\n    <div className={style.container}>\n      <Header />\n      <div className={style.wrapper}>\n        <div className={style.documents__sourceTree}>\n          <SourceTree />\n        </div>\n        <div className={style.documents__viewer}>\n          <div className={style.documents__text}>Documents text</div>\n          <div className={(style.documents__infoBar, style.infoBar)}>\n            <div className={style.infoBar__openFileName}>Name of document</div>\n            <div className={style.infoBar__currentDate}>01/01/2020</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n  sourceTreeData: {\r\n    dialogsData: {\r\n      id: \"root\",\r\n      name: \"Переписка\",\r\n      children: [\r\n        {\r\n          id: \"1\",\r\n          name: \"Партнеры\",\r\n          children: [\r\n            {\r\n              id: \"1_1\",\r\n              name: \"Письмо 1\",\r\n            },\r\n            {\r\n              id: \"1_2\",\r\n              name: \"Письмо 2\",\r\n            },\r\n            {\r\n              id: \"1_3\",\r\n              name: \"Письмо 3\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"2\",\r\n          name: \"ФНС\",\r\n          children: [\r\n            {\r\n              id: \"2_1\",\r\n              name: \"Извещение 1\",\r\n            },\r\n            {\r\n              id: \"2_2\",\r\n              name: \"Извещение 2\",\r\n            },\r\n            {\r\n              id: \"2_3\",\r\n              name: \"Извещение 3\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    documentsData: {\r\n      id: \"root\",\r\n      name: \"Документы\",\r\n      children: [\r\n        {\r\n          id: \"1\",\r\n          name: \"Договора\",\r\n          children: [\r\n            {\r\n              id: \"1_1\",\r\n              name: \"Договор 1\",\r\n            },\r\n            {\r\n              id: \"1_2\",\r\n              name: \"Договор 2\",\r\n            },\r\n            {\r\n              id: \"1_3\",\r\n              name: \"Договор 3\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"2\",\r\n          name: \"Декларации\",\r\n          children: [\r\n            {\r\n              id: \"2_1\",\r\n              name: \"Декларация 1\",\r\n            },\r\n            {\r\n              id: \"2_2\",\r\n              name: \"Декларация 2\",\r\n            },\r\n            {\r\n              id: \"2_3\",\r\n              name: \"Декларация 3\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  }\r\n};\r\n\r\nconst sourceTreeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default sourceTreeReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport sourceTreeReducer from \"./sourceTreeReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  sourceTree: sourceTreeReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__fH3sp\",\"wrapper\":\"App_wrapper__Scdqe\",\"documents__sourceTree\":\"App_documents__sourceTree__3jqu-\",\"documents__viewer\":\"App_documents__viewer__3f5BP\",\"documents__text\":\"App_documents__text__24Oxr\",\"infoBar\":\"App_infoBar__13WKn\",\"infoBar__openFileName\":\"App_infoBar__openFileName__-naHc\",\"infoBar__currentDate\":\"App_infoBar__currentDate__2uML4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1BRpm\",\"header__leftSide\":\"Header_header__leftSide__3r4kM\",\"header__rightSide\":\"Header_header__rightSide__1lz52\",\"header__treeIcon\":\"Header_header__treeIcon__2hh4_\",\"header__title\":\"Header_header__title__1oX2c\",\"header__saveIcon\":\"Header_header__saveIcon__2Hzs9\",\"header__openIcon\":\"Header_header__openIcon__39iID\",\"header__accountIcon\":\"Header_header__accountIcon__27ziU\"};"],"sourceRoot":""}