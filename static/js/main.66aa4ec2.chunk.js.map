{"version":3,"sources":["components/DocumentViewer/InfoBar/InfoBar.module.css","App.module.css","components/DocumentViewer/DocumentViewer.module.css","components/DocumentViewer/DocumentReadMode/DocumentReadMode.module.css","components/DocumentViewer/DocumentEditMode/DocumentEditMode.module.css","components/SourceTree/SourceTree.module.css","components/Header/Header.module.css","components/DocumentViewer/InfoBar/InfoBar.jsx","components/DocumentViewer/DocumentReadMode/DocumentReadMode.jsx","components/DocumentViewer/DocumentEditMode/DocumentEditMode.jsx","redux/documentViewerReducer.js","components/DocumentViewer/DocumentViewer.jsx","components/SourceTree/SourceTree.jsx","redux/sourceTreeReducer.js","components/SourceTree/SourceTreeContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["module","exports","InfoBar","props","className","style","documents__infoBar","infoBar","infoBar__openFileName","infoBar__documentIcon","fontSize","documentIsOpen_name","infoBar__currentDate","date","Date","day","getDate","month","getMonth","year","getFullYear","getCurrentDate","DocumentReadMode","documents__text","documentIsOpen_text","DocumentEditMode","editedText","React","createRef","documents__textarea","ref","autofocus","onChange","onChangeEditDocumentText","current","value","documentIsOpen_textEdit","saveEditDocumentText","documentId","type","initialState","documents","id","name","text","documentIsOpen","documentEditMode","documentViewerReducer","state","action","filter","document","currentOpenDocumentText","editedDocumentText","connect","documentViewer","selectedDataId","sourceTree","documents__viewer","useStyles","makeStyles","root","eight","flexGrow","maxWidth","DialogsTree","classes","onClickSourceTree","dataId","confirmAlert","message","buttons","label","onClick","getDocumentById","setSelectedDataId","renderTree","nodes","TreeItem","key","nodeId","Array","isArray","children","map","node","documents__sourceTree","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","dialogsData","documentsData","sourceTreeData","sourceTreeReducer","SourceTree","Header","header","header__leftSide","header__title","header__rightSide","saveButton","editButton","header__accountIcon","fill","getStartEditDocument","editButton_active","header__editButton","event","preventDefault","editButton_deactive","disabled","header__editButton__disabled","saveButton_active","header__saveButton","saveButton_deactive","header__saveButton__disabled","App","container","wrapper","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.66aa4ec2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBar\":\"InfoBar_infoBar__dtlsc\",\"infoBar__openFileName\":\"InfoBar_infoBar__openFileName__2RHGK\",\"infoBar__currentDate\":\"InfoBar_infoBar__currentDate__18jkb\",\"infoBar__documentIcon\":\"InfoBar_infoBar__documentIcon__3XgAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__fH3sp\",\"wrapper\":\"App_wrapper__Scdqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"documents__viewer\":\"DocumentViewer_documents__viewer__1J1s5\",\"documents__text\":\"DocumentViewer_documents__text__2xX8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"documents__text\":\"DocumentReadMode_documents__text__2-m6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"documents__textarea\":\"DocumentEditMode_documents__textarea__1kTLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"documents__sourceTree\":\"SourceTree_documents__sourceTree__l4ZuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1BRpm\",\"header__leftSide\":\"Header_header__leftSide__3r4kM\",\"header__rightSide\":\"Header_header__rightSide__1lz52\",\"header__title\":\"Header_header__title__1oX2c\",\"header__editButton\":\"Header_header__editButton__1O4ZU\",\"header__saveButton\":\"Header_header__saveButton__3N8b-\",\"header__editButton__disabled\":\"Header_header__editButton__disabled__3RHpa\",\"header__saveButton__disabled\":\"Header_header__saveButton__disabled__2iz9N\"};","import React from \"react\";\r\nimport style from \"./InfoBar.module.css\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nconst InfoBar = (props) => {\r\n  const getCurrentDate = () => {\r\n    let date = new Date();\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className={(style.documents__infoBar, style.infoBar)}>\r\n      <div className={style.infoBar__openFileName}>\r\n        <DescriptionIcon className={style.infoBar__documentIcon} fontSize=\"small\" />\r\n        {props.documentIsOpen_name !== null ? props.documentIsOpen_name : null}\r\n      </div>\r\n      <div className={style.infoBar__currentDate}>{getCurrentDate()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBar;\r\n","import React from \"react\";\r\nimport style from \"./DocumentReadMode.module.css\";\r\n\r\nconst DocumentReadMode = (props) => {\r\n  return (\r\n    <div className={style.documents__text}>{props.documentIsOpen_text}</div>\r\n  );\r\n};\r\n\r\nexport default DocumentReadMode;\r\n","import React from \"react\";\r\nimport style from \"./DocumentEditMode.module.css\";\r\n\r\nconst DocumentEditMode = (props) => {\r\n  const editedText = React.createRef();\r\n  const onChangeEditedText = () => {\r\n    props.onChangeEditDocumentText(editedText.current.value);\r\n  };\r\n  \r\n  return (\r\n    <textarea\r\n      className={style.documents__textarea}\r\n      ref={editedText}\r\n      autofocus={true}\r\n      onChange={onChangeEditedText}\r\n      value={props.documentIsOpen_textEdit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DocumentEditMode;\r\n","const GET_DOCUMENT_BY_ID = \"GET_DOCUMENT_BY_ID\";\r\nconst GET_START_EDIT_DOCUMENT = \"GET_START_EDIT_DOCUMENT\";\r\nconst ON_CHANGE_EDIT_DOCUMENT_TEXT = \"ON_CHANGE_EDIT_DOCUMENT_TEXT\";\r\nconst SAVE_EDIT_DOCUMENT_TEXT = \"GET_SAVE_EDIT_DOCUMENT_TEXT\";\r\n\r\nexport const getDocumentById = (documentId) => ({\r\n  type: GET_DOCUMENT_BY_ID,\r\n  documentId,\r\n});\r\nexport const getStartEditDocument = (currentOpenDocumentText) => ({\r\n  type: GET_START_EDIT_DOCUMENT,\r\n  currentOpenDocumentText,\r\n});\r\nexport const onChangeEditDocumentText = (editedDocumentText) => ({\r\n  type: ON_CHANGE_EDIT_DOCUMENT_TEXT,\r\n  editedDocumentText,\r\n});\r\nexport const saveEditDocumentText = (documentId) => ({\r\n  type: SAVE_EDIT_DOCUMENT_TEXT,\r\n  documentId,\r\n});\r\n\r\nlet initialState = {\r\n  documents: [\r\n    { id: \"1_1\", name: \"Письмо 1\", text: \"ID[1_1]: Письмо 1\" },\r\n    { id: \"1_2\", name: \"Письмо 2\", text: \"ID[1_2]: Письмо 2\" },\r\n    { id: \"1_3\", name: \"Письмо 3\", text: \"ID[1_3]: Письмо 3\" },\r\n    { id: \"2_1\", name: \"Извещение 1\", text: \"ID[2_1]: Извещение 1\" },\r\n    { id: \"2_2\", name: \"Извещение 2\", text: \"ID[2_2]: Извещение 2\" },\r\n    { id: \"2_3\", name: \"Извещение 3\", text: \"ID[2_3]: Извещение 3\" },\r\n    { id: \"3_1\", name: \"Договор 1\", text: \"ID[3_1]: Договор 1\" },\r\n    { id: \"3_2\", name: \"Договор 2\", text: \"ID[3_2]: Договор 2\" },\r\n    { id: \"3_3\", name: \"Договор 3\", text: \"ID[3_3]: Договор 3\" },\r\n    { id: \"4_1\", name: \"Декларация 1\", text: \"ID[4_1]: Декларация 1\" },\r\n    { id: \"4_2\", name: \"Декларация 2\", text: \"ID[4_2]: Декларация 2\" },\r\n    { id: \"4_3\", name: \"Декларация 3\", text: \"ID[4_3]: Декларация 3\" },\r\n  ],\r\n  documentIsOpen: [{ id: null, name: null, text: null }],\r\n  documentIsOpen_textEdit: \"\",\r\n  documentEditMode: false,\r\n};\r\n\r\nconst documentViewerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_DOCUMENT_BY_ID: {\r\n      return {\r\n        ...state,\r\n        documentEditMode: false,\r\n        documentIsOpen: state.documents.filter(\r\n          (document) => document.id === action.documentId\r\n        ),\r\n      };\r\n    }\r\n    case GET_START_EDIT_DOCUMENT: {\r\n      return {\r\n        ...state,\r\n        documentIsOpen_textEdit: action.currentOpenDocumentText,\r\n        documentEditMode: true,\r\n      };\r\n    }\r\n    case ON_CHANGE_EDIT_DOCUMENT_TEXT: {\r\n      return {\r\n        ...state,\r\n        documentIsOpen_textEdit: action.editedDocumentText,\r\n      };\r\n    }\r\n    case SAVE_EDIT_DOCUMENT_TEXT: {\r\n      return {\r\n        ...state,\r\n        documents: [\r\n          ...state.documents,\r\n          (state.documentIsOpen[0].text = state.documentIsOpen_textEdit),\r\n        ],\r\n        documentEditMode: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default documentViewerReducer;\r\n","import React from \"react\";\r\nimport style from \"./DocumentViewer.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport InfoBar from \"./InfoBar/InfoBar\";\r\nimport DocumentReadMode from \"./DocumentReadMode/DocumentReadMode\";\r\nimport DocumentEditMode from \"./DocumentEditMode/DocumentEditMode\";\r\nimport { onChangeEditDocumentText } from \"../../redux/documentViewerReducer\";\r\n\r\nconst DocumentViewer = (props) => {\r\n  let documentViewer;\r\n\r\n  if (props.documentEditMode) {\r\n    documentViewer = (\r\n      <DocumentEditMode\r\n        onChangeEditDocumentText={props.onChangeEditDocumentText}\r\n        documentIsOpen_textEdit={props.documentIsOpen_textEdit}\r\n      />\r\n    );\r\n  } else {\r\n    if (props.selectedDataId !== null)\r\n      documentViewer = (\r\n        <DocumentReadMode documentIsOpen_text={props.documentIsOpen[0].text} />\r\n      );\r\n    else\r\n      documentViewer = (\r\n        <div className={style.documents__text}>\r\n          Для начала работы выберите документ или пиcьмо\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={style.documents__viewer}>\r\n      {documentViewer}\r\n      <InfoBar documentIsOpen_name={props.documentIsOpen[0].name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    documentIsOpen: state.documentViewer.documentIsOpen,\r\n    documentEditMode: state.documentViewer.documentEditMode,\r\n    documentIsOpen_textEdit: state.documentViewer.documentIsOpen_textEdit,\r\n    selectedDataId: state.sourceTree.selectedDataId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onChangeEditDocumentText })(\r\n  DocumentViewer\r\n);\r\n","import React from \"react\";\r\nimport style from \"./SourceTree.module.css\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    eight: \"auto\",\r\n    flexGrow: 1,\r\n    maxWidth: \"100vh\",\r\n  },\r\n});\r\n\r\nconst DialogsTree = (props) => {\r\n  let confirmForSave = () => {\r\n    confirmAlert({\r\n      message: \"Сохранить последние изменения в текущем документе?\",\r\n      buttons: [\r\n        {\r\n          label: \"Да\",\r\n          onClick: () => props.saveEditDocumentText(props.selectedDataId),\r\n        },\r\n        {\r\n          label: \"Нет\",\r\n          onClick: () => props.getDocumentById(props.selectedDataId),\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const onClickSourceTree = (dataId) => {\r\n    if (props.documentEditMode) {\r\n      confirmForSave();\r\n    } else {\r\n      props.setSelectedDataId(dataId);\r\n      props.getDocumentById(dataId);\r\n    }\r\n  };\r\n\r\n  const renderTree = (nodes) => (\r\n    <TreeItem\r\n      onClick={() =>\r\n        nodes.type === \"document\" ? onClickSourceTree(nodes.id) : null\r\n      }\r\n      key={nodes.id}\r\n      nodeId={nodes.id}\r\n      label={nodes.name}\r\n    >\r\n      {Array.isArray(nodes.children)\r\n        ? nodes.children.map((node) => renderTree(node))\r\n        : null}\r\n    </TreeItem>\r\n  );\r\n\r\n  return (\r\n    <div className={style.documents__sourceTree}>\r\n      <TreeView\r\n        className={classes.root}\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpanded={[\"root\"]}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n      >\r\n        {renderTree(props.dialogsData)}\r\n      </TreeView>\r\n      <TreeView\r\n        className={classes.root}\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpanded={[\"root\"]}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n      >\r\n        {renderTree(props.documentsData)}\r\n      </TreeView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogsTree;\r\n","const SET_SELECTED_DATA_ID = \"SET_SELECTED_DATA_ID\";\r\n\r\nexport const setSelectedDataId = (dataId) => ({ type: SET_SELECTED_DATA_ID, dataId });\r\n\r\nlet initialState = {\r\n  sourceTreeData: {\r\n    dialogsData: {\r\n      id: \"root\",\r\n      name: \"Переписка\",\r\n      children: [\r\n        {\r\n          id: \"1\",\r\n          type: \"folder\",\r\n          name: \"Партнеры\",\r\n          children: [\r\n            {\r\n              id: \"1_1\",\r\n              type: \"document\",\r\n              name: \"Письмо 1\",\r\n            },\r\n            {\r\n              id: \"1_2\",\r\n              type: \"document\",\r\n              name: \"Письмо 2\",\r\n            },\r\n            {\r\n              id: \"1_3\",\r\n              type: \"document\",\r\n              name: \"Письмо 3\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"2\",\r\n          type: \"folder\",\r\n          name: \"ФНС\",\r\n          children: [\r\n            {\r\n              id: \"2_1\",\r\n              type: \"document\",\r\n              name: \"Извещение 1\",\r\n            },\r\n            {\r\n              id: \"2_2\",\r\n              type: \"document\",\r\n              name: \"Извещение 2\",\r\n            },\r\n            {\r\n              id: \"2_3\",\r\n              type: \"document\",\r\n              name: \"Извещение 3\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    documentsData: {\r\n      id: \"root\",\r\n      type: \"folder\",\r\n      name: \"Документы\",\r\n      children: [\r\n        {\r\n          id: \"3\",\r\n          type: \"folder\",\r\n          name: \"Договора\",\r\n          children: [\r\n            {\r\n              id: \"3_1\",\r\n              type: \"document\",\r\n              name: \"Договор 1\",\r\n            },\r\n            {\r\n              id: \"3_2\",\r\n              type: \"document\",\r\n              name: \"Договор 2\",\r\n            },\r\n            {\r\n              id: \"3_3\",\r\n              type: \"document\",\r\n              name: \"Договор 3\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"4\",\r\n          type: \"folder\",\r\n          name: \"Декларации\",\r\n          children: [\r\n            {\r\n              id: \"4_1\",\r\n              type: \"document\",\r\n              name: \"Декларация 1\",\r\n            },\r\n            {\r\n              id: \"4_2\",\r\n              type: \"document\",\r\n              name: \"Декларация 2\",\r\n            },\r\n            {\r\n              id: \"4_3\",\r\n              type: \"document\",\r\n              name: \"Декларация 3\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  selectedDataId: null,\r\n};\r\n\r\nconst sourceTreeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SELECTED_DATA_ID: {\r\n      return {\r\n        ...state,\r\n        selectedDataId: action.dataId,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sourceTreeReducer;\r\n","import React from \"react\";\r\nimport SourceTree from \"./SourceTree\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSelectedDataId } from \"../../redux/sourceTreeReducer\";\r\nimport {\r\n  getDocumentById,\r\n  saveEditDocumentText,\r\n} from \"../../redux/documentViewerReducer\";\r\n\r\nconst SourceTreeContainer = (props) => {\r\n  return (\r\n    <SourceTree\r\n      dialogsData={props.sourceTreeData.dialogsData}\r\n      documentsData={props.sourceTreeData.documentsData}\r\n      setSelectedDataId={props.setSelectedDataId}\r\n      getDocumentById={props.getDocumentById}\r\n      documentEditMode={props.documentEditMode}\r\n      saveEditDocumentText={props.saveEditDocumentText}\r\n      selectedDataId={props.selectedDataId}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sourceTreeData: state.sourceTree.sourceTreeData,\r\n    selectedDataId: state.sourceTree.selectedDataId,\r\n    documentEditMode: state.documentViewer.documentEditMode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setSelectedDataId,\r\n  getDocumentById,\r\n  saveEditDocumentText,\r\n})(SourceTreeContainer);\r\n","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport AccountBoxRoundedIcon from \"@material-ui/icons/AccountBoxRounded\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <section className={style.header}>\r\n      <div className={style.header__leftSide}>\r\n        <h1 className={style.header__title}>Тестовое задание</h1>\r\n      </div>\r\n      <div className={style.header__rightSide}>\r\n        {props.saveButton}\r\n        {props.editButton}\r\n        <AccountBoxRoundedIcon\r\n          className={style.header__accountIcon}\r\n          style={{ fill: \"white\" }}\r\n          fontSize=\"large\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport Header from \"./Header\";\r\nimport {\r\n  getStartEditDocument,\r\n  saveEditDocumentText,\r\n} from \"../../redux/documentViewerReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HeaderContainer = (props) => {\r\n  const startEditDocument = (currentOpenDocumentText) =>\r\n    props.documentIsOpen[0].name !== null\r\n      ? props.getStartEditDocument(currentOpenDocumentText)\r\n      : null;\r\n\r\n  let editButton;\r\n  const editButton_active = (\r\n    <button\r\n      className={style.header__editButton}\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n        startEditDocument(props.documentIsOpen[0].text);\r\n      }}\r\n    >\r\n      <EditRoundedIcon\r\n        style={{ fill: \"white\" }}\r\n        fontSize=\"default\"\r\n      />\r\n      <span>Редактировать</span>\r\n    </button>\r\n  );\r\n  const editButton_deactive = (\r\n    <button disabled className={style.header__editButton__disabled}>\r\n      <EditRoundedIcon\r\n        style={{ fill: \"#a6a6a6\" }}\r\n        fontSize=\"default\"\r\n      />\r\n      <span>Редактировать</span>\r\n    </button>\r\n  );\r\n  let saveButton;\r\n  const saveButton_active = (\r\n    <button\r\n      className={style.header__saveButton}\r\n      onClick={() =>\r\n        props.documentEditMode\r\n          ? props.saveEditDocumentText(props.selectedDataId)\r\n          : null\r\n      }\r\n    >\r\n      <SaveRoundedIcon\r\n        style={{ fill: \"white\" }}\r\n        fontSize=\"default\"\r\n      />\r\n      <span>Сохранить</span>\r\n    </button>\r\n  );\r\n  const saveButton_deactive = (\r\n    <button disabled className={style.header__saveButton__disabled}>\r\n      <SaveRoundedIcon\r\n        style={{ fill: \"#a6a6a6\" }}\r\n        fontSize=\"default\"\r\n      />\r\n      <span>Сохранить</span>\r\n    </button>\r\n  );\r\n\r\n  if (props.documentEditMode) {\r\n    saveButton = saveButton_active;\r\n    editButton = editButton_deactive;\r\n  } else {\r\n    saveButton = saveButton_deactive;\r\n    if (props.selectedDataId !== null) {\r\n      editButton = editButton_active;\r\n    } else {\r\n      editButton = editButton_deactive;\r\n    }\r\n  }\r\n\r\n  return <Header saveButton={saveButton} editButton={editButton} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDataId: state.sourceTree.selectedDataId,\r\n    documentIsOpen: state.documentViewer.documentIsOpen,\r\n    documentEditMode: state.documentViewer.documentEditMode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStartEditDocument,\r\n  saveEditDocumentText,\r\n})(HeaderContainer);\r\n","import React from \"react\";\nimport style from \"./App.module.css\";\nimport DocumentViewer from \"./components/DocumentViewer/DocumentViewer\";\nimport SourceTreeContainer from \"./components/SourceTree/SourceTreeContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\nconst App = (props) => {\n  return (\n    <div className={style.container}>\n      <HeaderContainer />\n      <div className={style.wrapper}>\n        <SourceTreeContainer />\n        <DocumentViewer />        \n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\r\nimport sourceTreeReducer from \"./sourceTreeReducer\";\r\nimport documentViewerReducer from \"./documentViewerReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  sourceTree: sourceTreeReducer,\r\n  documentViewer: documentViewerReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}